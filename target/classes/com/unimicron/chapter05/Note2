惰性函數
1. 應用場景
惰性計算(盡可能延遲表達式求值)，是許多函數式編程語言的特性，惰性集合在需要時提供其元素，無須預先計算他們，這可以
帶來一些好處，首先，可以將耗時的計算延遲到絕對需要的時候，其次，可以創建無限個集合，只要他們繼續收到請求，就會繼續
提供元素，函數的惰性使用讓您能夠得到更高效的代碼，Java並沒有為惰性提供原生支持，Scala提供了
2. 用法
當函數返回值被聲明為lazy時，函數的執行將會被推遲，直到我們首次對其取值，該函數才會執行，這種函數稱之為惰性函數，
在Java的某些框架中稱為懶加載(惰性加載)
3. 注意事項
lazy不能修飾var類型的變量
不但是在調用函數時，加了lazy會導致函數的執行被推遲，我們在聲明一個變量時，如果給聲明了lazy，那麼變量值的分配也
會推遲，比如lazy val = 10