Scala抽象類
Scala中，通過abstract關鍵字標記不能被實例化的類，方法不用標記abstract，只要省掉方法體即可，抽象類可以擁有
抽象字段，抽象字段就是沒有初始值的字段

細節
1. 抽象類不能被實例化
2. 抽象類不一定要包含abstract方法，也就是說，抽象類可以沒有abstract方法
3. 一旦類包含了抽象方法或者抽象屬性，則這個類需聲明為abstract
4. 抽象方法不能有主體，不允許使用abstract修飾
5. 如果一個類繼承了抽象類，則他必須實現抽象類的所有抽象方法和抽象屬性，除非他自己也聲明為abstract類
6. 抽象方法和抽象屬性不能為private、final來修飾，因為這些關鍵字都和重寫/實現相違背
7. 抽象類中可以有實現的方法
8. 子類重寫方法不需要override，寫上也不會錯

匿名子類
和Java一樣，可以通過包含帶有定義或重寫的代碼塊的方式創建一個匿名的子類
這種子類就是暫時用一下，用完就被garbage collection，每次創建的匿名子類都可能不一樣