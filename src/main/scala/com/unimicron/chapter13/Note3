樣例類(模板)

基本介紹(可看底層)
1. 樣例類仍然是類
2. 樣例類用case關鍵字進行聲明
3. 樣例類是為模式匹配而優化的類
4. 樣例類中的每一個構造器都成為val，除非它被顯式地聲明為var(不建議這樣做)
5. 在樣例類對應的伴生對象中，提供apply()，讓你不用new關鍵字就能構造出相應的對象(創建樣例類的同時，也會自動生成伴生對象，
   這個伴生對象也會自動生成apply()、unapply()和其他常用方法)
6. 提供unapply()，讓模式匹配可以工作
7. 將自動生成toString、equals、hashCode、copy方法(有點類似模板類，直接給生成，供工程師使用)
8. 除上述外，樣例類和其他類完全一樣，可以添加方法、字段，以擴展他們

樣例類最佳實踐1
當我們有一個類型為Amount的對象時，可以用模式匹配來匹配它的類型，並將屬性值綁定到變量(即: 把樣例類對象的屬性值提取到某個變量，
這功能有用)

樣例類最佳實踐2
樣例類的copy()和代名參數，copy()創建一個與現有對象值相同的新對象，並可以通過帶名參數來修改某些屬性

case語句中的中置(綴)表達式
甚麼是中置表達式，1+2，就是一個中置表達式，如果unapply()產出一個tuple，就可以在case語句中使用中置表示法，比如可以匹配到
一個List序列

匹配嵌套結構*****
操作原理類似於正則表達式
最佳實踐案例 - 商品綑綁打折出售:
現在有一些商品，使用Scala設計相關的樣例類，完成商品綑綁打折出售，要求
1. 商品綑綁可以是單個商品，也可以是多個商品
2. 打折時按照折扣x元進行設計
3. 能夠統計出所有綑綁商品打折的最終價格

密封類
如果想讓case類的所有子類都必須在聲明該類的相同的源文件中定義，可以將樣例類的通用超類聲明為sealed，這個超類
稱之為密封類
密封類就是不能在其他文件中定義子類，但在別的文件中可以使用與創建源文件中定義的樣例類

無論是樣例類或一般類，若加了sealed，只能在與該類的同份.scala文件中，定義繼承了該類的子類，在別的.scala文件中定義
會報錯，但可以在別的.scala文件中使用與創建合法繼承該類的子類