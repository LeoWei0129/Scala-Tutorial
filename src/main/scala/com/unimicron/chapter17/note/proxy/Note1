代理模式 Proxy Pattern

基本介紹
1. 代理模式: 為一個對象提供一個替身，以控制對這個對象的訪問
2. 被代理的對象可以是遠程對象、創建開銷大的對象、需要安全控制的對象
3. 代理模式有不同的形式(比如: 遠程代理、靜態代理、動態代理)，都是為了控制與管理對象訪問

看一個項目需求
糖果機項目，具體要求如下:
1. 某公司需要將銷售糖果的糖果機放置到本地(本地監控)與外地(遠程監控)，進行糖果銷售
2. 給糖果機插入硬幣，轉動手柄，這樣就可以購買糖果
3. 可以監控糖果機的狀態和銷售情況

對本地糖果機的狀態和銷售情況進行監控，相對比較簡單
對遠程糖果機的狀態和銷售情況進行監控，相對比較複雜，分析一下
1. 方式一: 因為遠程監控糖果機不在本地，比如在另外的城市、國家、這時可以使用socket編程來進行網路編程控制
   (缺點: 麻煩)
2. 方式二: 在遠程放置web服務器，通過web編程來實現遠程監控
3. 方式三: 使用RMI(Remote Method Invocation)遠程方法調用來完成對遠程糖果機的監控，因為RMI將socket的
   底層封裝起來(這句話即是一個在本地的遠程代理server)，對外提供調用方法接口即可(此server提供遠程對象方
   法調用)，這樣比較簡單，這樣我們就可以實現遠程代理模式開發

遠程代理模式監控方案
遠程代理: 遠程對象的本地代表，通過它可以把遠程對象當本地對象來調用，遠程代理通過網路和真正的遠程對象溝通訊
息

Java RMI實現遠程代理
RMI指的是遠程方法調用，他是一種機制，能夠讓在某個Java虛擬機上的對象調用另一個Java虛擬機中的對象上的方法，
可以用此方法調用的任何對象必須實現該遠程接口，RMI可以將底層的socket編程封裝，簡化操作

Java RMI介紹
1. RMI遠程方法的調用是計算機之間通過網路實現對象調用的一種通訊機制
2. 使用RMI機制，一台計算機上的對象可以調用另外一台計算機上的對象來獲取遠程數據
3. RMI被設計成一種面向對象開發方式，允許工程師使用遠程對象來實現通信

RMI開發步驟
1. 製作遠程接口，接口文件
2. 遠程接口的實現，Service文件
3. RMI服務器註冊，開啟服務
4. RMI代理端通過RMI查詢到服務端，建立聯繫，通過接口調用遠程方法